#ifndef MAN_H
# define MAN_H

# define MANUEL "\n---------------------------------------------------MAN---------------------------------------------------\n\n#+:SECTION DU MANUEL#0\n\n     Le man est est une commande qui en tant normale appelle a l'ouverture du manuel d'une fonction existante\n     cela implique qu'il est possible d'obtenir des informations supplementaire sur les commandes suivantes:\n\n      1      (#_man#0) indice\n\n      2      (#_man#0) status\n\n      3      (#_man#0) key\n\n      4      man\n\n     Ce man sert avant tout de verification de synthax et de l'utilitee des fonctions ci-dessus\n\n#+:SEE ALSO#0\n     key, man, indice\n\n___________________________________________________END___________________________________________________\n\n"
# define INDICE "\n---------------------------------------------------MAN---------------------------------------------------\n\n#+:NAME#0\n     indice -- struct permettant de renvoyer un 'hint' et d'en stocker le nombre d'apelle\n\n#+:LIBRARY#0\n     Standard Picoshell Library (pico, -pi)\n\n#+:SYNOPSIS#0\n     #include <picoshell.h>\n\n     #_t_indice#0\n     indice(#_int input#0)\n\n#+:DESCRIPTION#0\n     la fonction indice a pour but de t'aider si tu en ressens a un momment le besoin. \n     Elle retourne le nombre de fois qu'elle a ete appeller et donc te fais perdre du score totale plus tu l'appelle.\n\n#+:RETURN VALUE#0\n     cette fonction retourne un 1 quand l'input est utilisee ou un 0 quand le level est passer sans appelle.\n\n#+:SEE ALSO#0\n     key, man, statut\n\n___________________________________________________END___________________________________________________\n\n"
# define KEY 	"\n---------------------------------------------------MAN---------------------------------------------------\n\n#+:NAME#0\n     key -- Cette commande compare ton mot de passe avec celui deja existant\n\n#+:LIBRARY#0\n     Standard Picoshell library (pico, -pi)\n\n#+:SYNOPSIS#0\n     #include<picoshell.h>\n\n     #_t_key_pass#0\n      key(#_unsigned char *password#0)\n\n:DESCRITPION\n     la commande key est ton outil pour soumettre tes reponses potentielles aux enigmes.\n\n:RETURN VALUES\n     Key retourne la string password dans l'entree du terminale pour la comparee avec la cle existante.\n     Key retourne la difference entre le vrai password et celui entree par le joueur.\n\n:SEE ALSO\n     statut, man, indice\n\n___________________________________________________END___________________________________________________\n\n"
# define STATUS "\n---------------------------------------------------MAN---------------------------------------------------\n\n#+:NAME#0\n     status -- fais appelle a toute les statistiques definient au prealable\n\n#+:LIBRARY#0\n     Standard Picoshell Library (pico, -pi)\n\n#+:SYNOPSIS#0\n     #include <picoshell.h>\n\n     #_wchar#0\n     status(#_void#0)\n\n#+:DESCRIPTION#0\n     la fonction status affiche sur la sortie standard les parametres de l'escape game,\n     tel que le nombre d'indice utiliser,le temps restant, le niveau actuelle et les points actuelles.\n\n#+:RETURN VALUE#0\n     status renvoie une array contenant toute les informations predefinis\n\n#+:SEE ALSO#0\n     key, man, indice\n\n___________________________________________________END___________________________________________________\n\n"

#endif